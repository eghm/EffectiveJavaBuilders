/**
 * This class is generated by jOOQ
 */
package com.mycompany.app.jooq.tables.records;


import com.mycompany.app.jooq.tables.Absentlog;
import com.mycompany.app.jooq.tables.interfaces.IAbsentlog;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "absentlog", schema = "iob")
public class AbsentlogRecord extends TableRecordImpl<AbsentlogRecord> implements Record4<String, String, Timestamp, Integer>, IAbsentlog {

	private static final long serialVersionUID = 851995749;

	/**
	 * Setter for <code>iob.absentlog.empid</code>.
	 */
	public void setEmpid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>iob.absentlog.empid</code>.
	 */
	@Column(name = "empid", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getEmpid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>iob.absentlog.absid</code>.
	 */
	public void setAbsid(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>iob.absentlog.absid</code>.
	 */
	@Column(name = "absid", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getAbsid() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>iob.absentlog.logdate</code>.
	 */
	public void setLogdate(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>iob.absentlog.logdate</code>.
	 */
	@Column(name = "logdate", nullable = false)
	@NotNull
	@Override
	public Timestamp getLogdate() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>iob.absentlog.logversionid</code>.
	 */
	public void setLogversionid(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>iob.absentlog.logversionid</code>.
	 */
	@Column(name = "logversionid", nullable = false, precision = 8)
	@NotNull
	@Override
	public Integer getLogversionid() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Timestamp, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Timestamp, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Absentlog.ABSENTLOG.EMPID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Absentlog.ABSENTLOG.ABSID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Absentlog.ABSENTLOG.LOGDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Absentlog.ABSENTLOG.LOGVERSIONID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getEmpid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getAbsid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getLogdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getLogversionid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AbsentlogRecord value1(String value) {
		setEmpid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AbsentlogRecord value2(String value) {
		setAbsid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AbsentlogRecord value3(Timestamp value) {
		setLogdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AbsentlogRecord value4(Integer value) {
		setLogversionid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AbsentlogRecord values(String value1, String value2, Timestamp value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AbsentlogRecord
	 */
	public AbsentlogRecord() {
		super(Absentlog.ABSENTLOG);
	}

	/**
	 * Create a detached, initialised AbsentlogRecord
	 */
	public AbsentlogRecord(String empid, String absid, Timestamp logdate, Integer logversionid) {
		super(Absentlog.ABSENTLOG);

		setValue(0, empid);
		setValue(1, absid);
		setValue(2, logdate);
		setValue(3, logversionid);
	}
}
