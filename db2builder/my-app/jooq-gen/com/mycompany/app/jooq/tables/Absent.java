/**
 * This class is generated by jOOQ
 */
package com.mycompany.app.jooq.tables;


import com.mycompany.app.jooq.Iob;
import com.mycompany.app.jooq.Keys;
import com.mycompany.app.jooq.tables.records.AbsentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Absent extends TableImpl<AbsentRecord> {

	private static final long serialVersionUID = 1786882182;

	/**
	 * The reference instance of <code>iob.absent</code>
	 */
	public static final Absent ABSENT = new Absent();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AbsentRecord> getRecordType() {
		return AbsentRecord.class;
	}

	/**
	 * The column <code>iob.absent.empid</code>.
	 */
	public final TableField<AbsentRecord, String> EMPID = createField("empid", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>iob.absent.absid</code>.
	 */
	public final TableField<AbsentRecord, String> ABSID = createField("absid", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>iob.absent.absdate</code>.
	 */
	public final TableField<AbsentRecord, Timestamp> ABSDATE = createField("absdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>iob.absent.absdescription</code>.
	 */
	public final TableField<AbsentRecord, String> ABSDESCRIPTION = createField("absdescription", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

	/**
	 * The column <code>iob.absent.absnotes</code>.
	 */
	public final TableField<AbsentRecord, String> ABSNOTES = createField("absnotes", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>iob.absent.absdeleted</code>.
	 */
	public final TableField<AbsentRecord, Boolean> ABSDELETED = createField("absdeleted", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

	/**
	 * Create a <code>iob.absent</code> table reference
	 */
	public Absent() {
		this("absent", null);
	}

	/**
	 * Create an aliased <code>iob.absent</code> table reference
	 */
	public Absent(String alias) {
		this(alias, ABSENT);
	}

	private Absent(String alias, Table<AbsentRecord> aliased) {
		this(alias, aliased, null);
	}

	private Absent(String alias, Table<AbsentRecord> aliased, Field<?>[] parameters) {
		super(alias, Iob.IOB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AbsentRecord> getPrimaryKey() {
		return Keys.KEY_ABSENT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AbsentRecord>> getKeys() {
		return Arrays.<UniqueKey<AbsentRecord>>asList(Keys.KEY_ABSENT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AbsentRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AbsentRecord, ?>>asList(Keys.ABSENT_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Absent as(String alias) {
		return new Absent(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Absent rename(String name) {
		return new Absent(name, null);
	}
}
