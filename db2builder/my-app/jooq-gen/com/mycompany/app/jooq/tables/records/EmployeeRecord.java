/**
 * This class is generated by jOOQ
 */
package com.mycompany.app.jooq.tables.records;


import com.mycompany.app.jooq.tables.Employee;
import com.mycompany.app.jooq.tables.interfaces.IEmployee;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "employee", schema = "iob")
public class EmployeeRecord extends UpdatableRecordImpl<EmployeeRecord> implements Record7<String, String, String, String, String, String, String>, IEmployee {

	private static final long serialVersionUID = 794822223;

	/**
	 * Setter for <code>iob.employee.empid</code>.
	 */
	public void setEmpid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>iob.employee.empid</code>.
	 */
	@Id
	@Column(name = "empid", unique = true, nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getEmpid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>iob.employee.empuhnumber</code>.
	 */
	public void setEmpuhnumber(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>iob.employee.empuhnumber</code>.
	 */
	@Column(name = "empuhnumber", nullable = false, length = 17)
	@NotNull
	@Size(max = 17)
	@Override
	public String getEmpuhnumber() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>iob.employee.empfirstname</code>.
	 */
	public void setEmpfirstname(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>iob.employee.empfirstname</code>.
	 */
	@Column(name = "empfirstname", nullable = false, length = 40)
	@NotNull
	@Size(max = 40)
	@Override
	public String getEmpfirstname() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>iob.employee.emplastname</code>.
	 */
	public void setEmplastname(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>iob.employee.emplastname</code>.
	 */
	@Column(name = "emplastname", nullable = false, length = 40)
	@NotNull
	@Size(max = 40)
	@Override
	public String getEmplastname() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>iob.employee.emprole</code>.
	 */
	public void setEmprole(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>iob.employee.emprole</code>.
	 */
	@Column(name = "emprole", nullable = false, length = 1)
	@NotNull
	@Size(max = 1)
	@Override
	public String getEmprole() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>iob.employee.empdivision</code>.
	 */
	public void setEmpdivision(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>iob.employee.empdivision</code>.
	 */
	@Column(name = "empdivision", nullable = false, length = 40)
	@NotNull
	@Size(max = 40)
	@Override
	public String getEmpdivision() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>iob.employee.empstatus</code>.
	 */
	public void setEmpstatus(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>iob.employee.empstatus</code>.
	 */
	@Column(name = "empstatus", nullable = false, length = 1)
	@NotNull
	@Size(max = 1)
	@Override
	public String getEmpstatus() {
		return (String) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, String, String, String, String, String, String> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<String, String, String, String, String, String, String> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Employee.EMPLOYEE.EMPID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Employee.EMPLOYEE.EMPUHNUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Employee.EMPLOYEE.EMPFIRSTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Employee.EMPLOYEE.EMPLASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Employee.EMPLOYEE.EMPROLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Employee.EMPLOYEE.EMPDIVISION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Employee.EMPLOYEE.EMPSTATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getEmpid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getEmpuhnumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getEmpfirstname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getEmplastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getEmprole();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getEmpdivision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getEmpstatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value1(String value) {
		setEmpid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value2(String value) {
		setEmpuhnumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value3(String value) {
		setEmpfirstname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value4(String value) {
		setEmplastname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value5(String value) {
		setEmprole(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value6(String value) {
		setEmpdivision(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord value7(String value) {
		setEmpstatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmployeeRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EmployeeRecord
	 */
	public EmployeeRecord() {
		super(Employee.EMPLOYEE);
	}

	/**
	 * Create a detached, initialised EmployeeRecord
	 */
	public EmployeeRecord(String empid, String empuhnumber, String empfirstname, String emplastname, String emprole, String empdivision, String empstatus) {
		super(Employee.EMPLOYEE);

		setValue(0, empid);
		setValue(1, empuhnumber);
		setValue(2, empfirstname);
		setValue(3, emplastname);
		setValue(4, emprole);
		setValue(5, empdivision);
		setValue(6, empstatus);
	}
}
