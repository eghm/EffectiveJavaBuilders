/**
 * This class is generated by jOOQ
 */
package com.mycompany.app.jooq.tables.records;


import com.mycompany.app.jooq.tables.Empmanager;
import com.mycompany.app.jooq.tables.interfaces.IEmpmanager;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "empmanager", schema = "iob")
public class EmpmanagerRecord extends TableRecordImpl<EmpmanagerRecord> implements Record2<String, String>, IEmpmanager {

	private static final long serialVersionUID = -1661288965;

	/**
	 * Setter for <code>iob.empmanager.empid</code>.
	 */
	public void setEmpid(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>iob.empmanager.empid</code>.
	 */
	@Column(name = "empid", nullable = false, length = 36)
	@NotNull
	@Size(max = 36)
	@Override
	public String getEmpid() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>iob.empmanager.division</code>.
	 */
	public void setDivision(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>iob.empmanager.division</code>.
	 */
	@Column(name = "division", length = 40)
	@Size(max = 40)
	@Override
	public String getDivision() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Empmanager.EMPMANAGER.EMPID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Empmanager.EMPMANAGER.DIVISION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getEmpid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDivision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmpmanagerRecord value1(String value) {
		setEmpid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmpmanagerRecord value2(String value) {
		setDivision(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmpmanagerRecord values(String value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EmpmanagerRecord
	 */
	public EmpmanagerRecord() {
		super(Empmanager.EMPMANAGER);
	}

	/**
	 * Create a detached, initialised EmpmanagerRecord
	 */
	public EmpmanagerRecord(String empid, String division) {
		super(Empmanager.EMPMANAGER);

		setValue(0, empid);
		setValue(1, division);
	}
}
